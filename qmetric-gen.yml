LogLevel: info # Supported levels: trace, debug, info, warn, error & panic
CcaaSUrl: http://localhost:8080 # URL to CCaaS
CcaaSMetricRouteTemplate :     #/api/digital/channel/v1beta/accounts/%s/metrics #(%s is replaced with tenantId)
AnARouteTemplate:          #/auth/realms/%s/protocol/openid-connect/token #(%s is replaced with tenantId)
CallbackUrl: http://localhost:3000  # This is the callback url for the web hook, change the ip address to the ip address of the vm being used by the qmetricgen, do not change the port number - http if EnableTlsWebHook == false
QueryHatchIntervalSeconds: 2 # During the ramp phase of the test run this is the number of seconds between new concurrent query qmetric being hatched. Tenants are hatched consecutively
TokenRefreshIntervalSeconds: 120 # The interval in seconds that the AnA Token is refreshed
Env: qmetric_1_mock # This value is used as a label in DD to identify metrics generated by this qmetric-generator
SentryFile: StopAllTraffic.txt
EnableAnA: false
EnableDatadog: false
HttpUserAgentHeaderContent: QMetric-Traffic-Agent
WebhookCertFilePath: cert.pem
WebhookCertKeyFilePath: key.pem
DatadogDelayIntervalSecs: 30 # Sleep Delay between posting metrics to datadog
LogMetricsIntervalSecs: 30 # Sleep Delay between posting metrics to log output 
EnableTlsWebHook: false
TrafficRunDurationHours: .2 # This value determines the length of the traffic run. Set to 0 to disable this feature (1.0 will be 1 hour,0.5 will be half an hour etc)
GeneralHttpTimeoutSecs: 30 # A http timeout in seconds, used for example while posting for a qmetric response
NumHttpRequestAttempts: 3
HttpRetryDelaySecs: 5
LogOutputType: console # console or log file output - defaults to console
LogOutputFilePath: qmetrics.log
Tenants: # Supports more than one tenant
- TenantId: 01-ACCT-MOCK  #used in URL path parameter requesting metrics (accountId)
  IntegrationId: 01-INTERGRATE # Used with URL path parameters (intergrationId) 
  Queues:
  - QueueId: 01-ACCT-EMAIL-MOCK # Queue ID required for qmetric query for email channel
    ChannelId: Email
    Attributes: # These are the qmetric attribute names used for the current tenant - Only declare for Queue + Attribute Based Query
    - Language.English
    - Language.French
    Priority: 3
  - QueueId: 01-ACCT-VOICE-MOCK # Queue ID required for qmetric query for voice channel
    ChannelId: Voice
    Priority: 3
  NumConcurrentUsers: 10 # The max number of concurrent users for this tenant
  UserPoolSize: 10 # The max number of unique concurrent user id (index)
  InterQMetricQueryDelayMSecs: 0 # Miliseconds Delay introduced between qmetric queries, can be used regulate query rate at the tenant level
  CallbackTimeoutSecs: 30 # A callback timeout in seconds, used for example while waiting for a qmetric callback
- TenantId: 02-ACCT-MOCK  #used in URL path parameter requesting metrics (accountId)
  IntegrationId: 02-INTERGRATE # Used with URL path parameters (intergrationId) 
  Queues:
  - QueueId: 02-ACCT-CHAT-MOCK # Queue ID required for qmetric query for chat channel
    ChannelId: Chat
    Priority: 3
  - QueueId: 02-ACCT-VOICE-MOCK # Queue ID required for qmetric query for voice channel
    ChannelId: Voice
    Priority: 3
  NumConcurrentUsers: 10 # The max number of concurrent users for this tenant
  UserPoolSize: 10 # The max number of unique concurrent user id (index)
  InterQMetricQueryDelayMSecs: 0 # Miliseconds Delay introduced between qmetric queries, can be used regulate query rate at the tenant level
  CallbackTimeoutSecs: 30 # A callback timeout in seconds, used for example while waiting for a qmetric callback

#Bursts: # Support more than one Burst - Needs Testing
#- BurstStartDelayTimerMinutes: 2 # This is the delay before the qmetric burst starts
#  TenantIndex: 0 # The Burst is generated for one of the tenants above, the particular tenant is selected based on the index of the tenant in the Tenants array above, 0 selects the first tenant, 1 selects the second tenant etc.
#  QueueIndex: 0 # The Burst is generated for one of the queue above, the particular tenant/queue is selected based on the index of the queue in the Tenants.Queue array above, 0 selects the first queue, 1 selects the second queue etc.
#  NumConcurrentUsersInBurst: 1 # The number of additional concurrent qmetric querys in the burst
#  QueryHatchIntervalSeconds: 5 # The hatch rate for the burst
#  BurstDurationMinutes: 3 # The duration of the burst in minutes